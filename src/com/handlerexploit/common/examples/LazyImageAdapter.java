/*
 *  Copyright (c) 2012 Daniel Huckaby
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.handlerexploit.common.examples;

import android.content.Context;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView.ScaleType;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.TextView;

class LazyImageAdapter extends ArrayAdapter<Image> {

    public LazyImageAdapter(Context context) {
        super(context, 0);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        
        ViewHolder holder;
        if (convertView == null) {
            convertView = new LinearLayout(getContext());
            
            LinearLayout linearLayout = (LinearLayout) convertView;
            
            RemoteImageView icon = new RemoteImageView(getContext());
            icon.setScaleType(ScaleType.CENTER_CROP);
            linearLayout.addView(icon, new LayoutParams(75, 75));
            
            TextView text = new TextView(getContext());
            text.setPadding(10, 10, 10, 10);
            text.setGravity(Gravity.CENTER_VERTICAL);
            text.setSingleLine(true);
            linearLayout.addView(text, new LayoutParams(LayoutParams.FILL_PARENT, 75));

            holder = new ViewHolder();
            holder.text = text;
            holder.icon = icon;

            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }
        
        Image image = getItem(position);

        holder.text.setText(image.title);
        holder.icon.setImageBitmap(null);
        holder.icon.setImageURL(image.imageURL);

        return convertView;
    }

    private static class ViewHolder {
        
        TextView text;
        RemoteImageView icon;
    }
}

class Image {

    String title;
    String imageURL;
}