/*
 *  Copyright (c) 2012 Daniel Huckaby
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.handlerexploit.example;

import java.util.List;

import android.content.Context;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.LoaderManager.LoaderCallbacks;
import android.support.v4.content.AsyncTaskLoader;
import android.support.v4.content.Loader;
import android.widget.ListView;

import com.handlerexploit.example.adapters.LazyImageAdapter;
import com.handlerexploit.example.utils.Utilities;
import com.handlerexploit.example.utils.Utilities.Image;

public class LazyListExample extends FragmentActivity implements LoaderCallbacks<List<Image>> {
    
    private LazyImageAdapter mLazyImageAdapter;
    
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.list_content);
        
        mLazyImageAdapter = new LazyImageAdapter(this);
        ListView listView = (ListView) findViewById(android.R.id.list);
        listView.setEmptyView(findViewById(R.id.progressContainer));
        listView.setAdapter(mLazyImageAdapter);
        
        getSupportLoaderManager().initLoader(0, null, this);
    }
    
    @Override
    public Loader<List<Image>> onCreateLoader(int arg0, Bundle arg1) {
        return new WrappedAsyncTaskLoader<List<Image>>(this) {

            @Override
            public List<Image> loadInBackground() {
                return Utilities.getRandomImages(500);
            }
        };
    }

    @Override
    public void onLoadFinished(Loader<List<Image>> arg0, List<Image> arg1) {
        for (Image image : arg1) {
            mLazyImageAdapter.add(image);
        }
    }

    @Override
    public void onLoaderReset(Loader<List<Image>> arg0) {
        mLazyImageAdapter.clear();
    }

    /**
     * <a href="http://code.google.com/p/android/issues/detail?id=14944">Issue 14944</a>
     * 
     * @author Alexander Blom
     */
    private static abstract class WrappedAsyncTaskLoader<D> extends AsyncTaskLoader<D> {

        private D data;

        public WrappedAsyncTaskLoader(Context context) {
            super(context);
        }

        @Override
        public void deliverResult(D data) {
            if (!isReset()) {
                this.data = data;
                super.deliverResult(data);
            }
        }

        @Override
        protected void onStartLoading() {
            if (data != null) {
                deliverResult(data);
            } else if (takeContentChanged() || data == null) {
                forceLoad();
            }
        }

        @Override
        protected void onStopLoading() {
            cancelLoad();
        }

        @Override
        protected void onReset() {
            super.onReset();
            onStopLoading();
            data = null;
        }
    }
}